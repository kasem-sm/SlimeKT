// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        kspVersion = '1.7.20-1.0.6'
    }
    repositories {
        google()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath(libs.google.services.gradle)
    }
}

plugins {
    alias(libs.plugins.android.application).apply(false)
    alias(libs.plugins.android.library).apply(false)
    alias(libs.plugins.kotlin.android).apply(false)
    alias(libs.plugins.hilt.gradle.plugin).apply(false)
    alias(libs.plugins.spotless).apply(false)
    alias(libs.plugins.kotlin.plugin.serialization).apply(false)
    alias(libs.plugins.version.check).apply(false)
}

apply from: "gradle/project-dependency-graph.gradle"

task clean(type: Delete) {
    delete rootProject.buildDir
}

def provideAndroidXWorkerDeps(project) {
    project.dependencies {
        implementation libs.androidx.work.runtime.ktx
        implementation libs.hilt.work
        kapt libs.hilt.compiler
    }
}

def provideHiltDeps(project) {
    project.dependencies {
        // Hilt
        implementation libs.hilt.android
        kapt libs.hilt.compiler
    }
}

def provideUnitTestDeps(project) {
    project.dependencies {
        testImplementation libs.kotlinx.coroutines.test
        testImplementation libs.google.truth
        testImplementation libs.junit
        testImplementation libs.turbine
        testImplementation libs.mockk
    }
}

def provideUiTestDeps(project) {
    project.dependencies {
        androidTestImplementation libs.androidx.compose.ui.test.junit4
        androidTestImplementation libs.androidx.test.ext.junit
        androidTestImplementation libs.androidx.test.espresso.core
        androidTestImplementation libs.google.truth
        debugImplementation libs.androidx.compose.ui.test.manifest
    }
}

subprojects {
    apply plugin: 'com.diffplug.spotless'
    apply plugin: 'com.github.ben-manes.versions'
    spotless {
        kotlin {
            licenseHeaderFile project.rootProject.file('spotless/copyright.kt')
            target "**/*.kt"
            ktlint().userData(['android': 'true', 'max_line_length': '200'])
        }
        format 'misc', {
            target '**/*.gradle', '**/*.md', '**/.gitignore'
            trimTrailingWhitespace()
            indentWithTabs()
        }
    }
    // https://chris.banes.dev/composable-metrics/ for more information
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            if (project.findProperty("enableComposeCompilerReports") == "true") {
                freeCompilerArgs += [
                        "-P",
                        "plugin:androidx.compose.compiler.plugins.kotlin:reportsDestination=" +
                                project.buildDir.absolutePath + "/compose_metrics"
                ]
                freeCompilerArgs += [
                        "-P",
                        "plugin:androidx.compose.compiler.plugins.kotlin:metricsDestination=" +
                                project.buildDir.absolutePath + "/compose_metrics"
                ]
            }
        }
    }
}

if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}
