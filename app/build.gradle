plugins {
	id 'com.android.application'
}

apply {
	from("$rootDir/gradle/common.gradle")
}

android {
	buildTypes {
		release {
			minifyEnabled true
			shrinkResources true
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
		}
	}
	buildFeatures {
		kotlinOptions.freeCompilerArgs += "-opt-in=androidx.compose.material3.ExperimentalMaterial3Api"
		kotlinOptions.freeCompilerArgs += "-opt-in=androidx.compose.animation.ExperimentalAnimationApi"
		kotlinOptions.freeCompilerArgs += "-opt-in=androidx.compose.ui.ExperimentalComposeUiApi"
	}
}

apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
	defaultConfig {
		versionCode = 4
		versionName = "1.3"
		applicationId "kasem.sm.slime"
	}
}

provideAndroidXWorkerDeps(this)
provideHiltDeps(this)

dependencies {
	implementation(project(":core"))
	implementation(project(":common-ui"))

	implementation(project(":task-api"))
	implementation(project(":task-impl"))
	implementation(project(":auth-impl"))
	implementation(project(":auth-api"))

	implementation(project(':database'))

	// Article
	implementation(project(":features:article:widget"))

	implementation libs.androidx.core.ktx
	implementation libs.androidx.activity.compose
	implementation libs.androidx.compose.ui
	implementation libs.androidx.compose.material
	implementation libs.androidx.compose.material3
	implementation libs.androidx.security.crypto
	implementation libs.google.material

	implementation libs.coil.compose.base
	implementation libs.timber
	implementation libs.hilt.navigation.compose
	implementation libs.bundles.ktor.android

	// Destinations
	implementation libs.compose.destinations.animations.core

	// Ui core
	implementation(project(":screen:core"))

	// Ui Dep
	implementation(project(":screen:ui-profile"))
	implementation(project(":screen:ui-auth"))
	implementation(project(":screen:ui-article-list"))
	implementation(project(":screen:ui-explore"))
	implementation(project(":screen:ui-home"))
	implementation(project(":screen:ui-article-detail"))
	implementation(project(":screen:ui-subscribe-topic"))
	implementation(project(":screen:ui-bookmarks"))

	implementation libs.firebase.dynamic.link
	implementation(project(":features:article:dynamic-links-handler"))
}

if (file("google-services.json").exists()) {
	apply plugin: 'com.google.gms.google-services'
}
